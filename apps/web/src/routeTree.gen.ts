/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AiRouteImport } from './routes/ai'
import { Route as MainRouteRouteImport } from './routes/main/route'
import { Route as ChatRouteRouteImport } from './routes/chat/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MainIndexRouteImport } from './routes/main/index'
import { Route as ChatIndexRouteImport } from './routes/chat/index'
import { Route as ChatChatIdRouteImport } from './routes/chat/$chatId'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AiRoute = AiRouteImport.update({
  id: '/ai',
  path: '/ai',
  getParentRoute: () => rootRouteImport,
} as any)
const MainRouteRoute = MainRouteRouteImport.update({
  id: '/main',
  path: '/main',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatRouteRoute = ChatRouteRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainIndexRoute = MainIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRouteRoute,
} as any)
const ChatIndexRoute = ChatIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatRouteRoute,
} as any)
const ChatChatIdRoute = ChatChatIdRouteImport.update({
  id: '/$chatId',
  path: '/$chatId',
  getParentRoute: () => ChatRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/chat': typeof ChatRouteRouteWithChildren
  '/main': typeof MainRouteRouteWithChildren
  '/ai': typeof AiRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/chat/': typeof ChatIndexRoute
  '/main/': typeof MainIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/ai': typeof AiRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/chat': typeof ChatIndexRoute
  '/main': typeof MainIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/chat': typeof ChatRouteRouteWithChildren
  '/main': typeof MainRouteRouteWithChildren
  '/ai': typeof AiRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/chat/': typeof ChatIndexRoute
  '/main/': typeof MainIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/chat'
    | '/main'
    | '/ai'
    | '/dashboard'
    | '/login'
    | '/chat/$chatId'
    | '/chat/'
    | '/main/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/ai'
    | '/dashboard'
    | '/login'
    | '/chat/$chatId'
    | '/chat'
    | '/main'
  id:
    | '__root__'
    | '/'
    | '/chat'
    | '/main'
    | '/ai'
    | '/dashboard'
    | '/login'
    | '/chat/$chatId'
    | '/chat/'
    | '/main/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChatRouteRoute: typeof ChatRouteRouteWithChildren
  MainRouteRoute: typeof MainRouteRouteWithChildren
  AiRoute: typeof AiRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ai': {
      id: '/ai'
      path: '/ai'
      fullPath: '/ai'
      preLoaderRoute: typeof AiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main': {
      id: '/main'
      path: '/main'
      fullPath: '/main'
      preLoaderRoute: typeof MainRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/': {
      id: '/main/'
      path: '/'
      fullPath: '/main/'
      preLoaderRoute: typeof MainIndexRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/chat/': {
      id: '/chat/'
      path: '/'
      fullPath: '/chat/'
      preLoaderRoute: typeof ChatIndexRouteImport
      parentRoute: typeof ChatRouteRoute
    }
    '/chat/$chatId': {
      id: '/chat/$chatId'
      path: '/$chatId'
      fullPath: '/chat/$chatId'
      preLoaderRoute: typeof ChatChatIdRouteImport
      parentRoute: typeof ChatRouteRoute
    }
  }
}

interface ChatRouteRouteChildren {
  ChatChatIdRoute: typeof ChatChatIdRoute
  ChatIndexRoute: typeof ChatIndexRoute
}

const ChatRouteRouteChildren: ChatRouteRouteChildren = {
  ChatChatIdRoute: ChatChatIdRoute,
  ChatIndexRoute: ChatIndexRoute,
}

const ChatRouteRouteWithChildren = ChatRouteRoute._addFileChildren(
  ChatRouteRouteChildren,
)

interface MainRouteRouteChildren {
  MainIndexRoute: typeof MainIndexRoute
}

const MainRouteRouteChildren: MainRouteRouteChildren = {
  MainIndexRoute: MainIndexRoute,
}

const MainRouteRouteWithChildren = MainRouteRoute._addFileChildren(
  MainRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChatRouteRoute: ChatRouteRouteWithChildren,
  MainRouteRoute: MainRouteRouteWithChildren,
  AiRoute: AiRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
