/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AccountRouteImport } from './routes/account'
import { Route as AboutRouteImport } from './routes/about'
import { Route as AuthCallbackRouteImport } from './routes/AuthCallback'
import { Route as IndexRouteImport } from './routes/index'

const AccountRoute = AccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/AuthCallback',
  path: '/AuthCallback',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/AuthCallback': typeof AuthCallbackRoute
  '/about': typeof AboutRoute
  '/account': typeof AccountRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/AuthCallback': typeof AuthCallbackRoute
  '/about': typeof AboutRoute
  '/account': typeof AccountRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/AuthCallback': typeof AuthCallbackRoute
  '/about': typeof AboutRoute
  '/account': typeof AccountRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/AuthCallback' | '/about' | '/account'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/AuthCallback' | '/about' | '/account'
  id: '__root__' | '/' | '/AuthCallback' | '/about' | '/account'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
  AboutRoute: typeof AboutRoute
  AccountRoute: typeof AccountRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/AuthCallback': {
      id: '/AuthCallback'
      path: '/AuthCallback'
      fullPath: '/AuthCallback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthCallbackRoute: AuthCallbackRoute,
  AboutRoute: AboutRoute,
  AccountRoute: AccountRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
